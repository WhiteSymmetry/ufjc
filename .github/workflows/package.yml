name: package
on:
  workflow_dispatch:
env:
  REPO_NAME: ${{ github.event.repository.name }}
jobs:
  pypi:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools 
          pip install wheel twine
      - name: Make tarball
        run: python setup.py sdist
      - name: Make wheel
        run: python setup.py bdist_wheel
      - name: Upload to PyPI.org
        run: twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} dist/*
  anaconda:
    runs-on: ubuntu-20.04
    needs: pypi
    steps:
      - uses: actions/checkout@v2
      - name: Prepare conda
        run: |
          rm -rf ${REPO_NAME}
          conda update conda
          conda install anaconda-client conda-build
      - name: Create conda recipe from PyPI
        run: conda skeleton pypi --noarch-python ${REPO_NAME}
      - name: Build conda packages
        run: conda build --python 3.8 ${REPO_NAME}
      - name: Upload to Anaconda.org
        run: |
          PATH="/usr/share/miniconda/bin/:$PATH"
          anaconda login --username ${{ secrets.ANACONDA_USERNAME }} --password ${{ secrets.ANACONDA_PASSWORD }}
          anaconda upload /usr/share/miniconda/conda-bld/noarch/${REPO_NAME}*.tar.bz2
          anaconda logout
  docker:
    runs-on: ubuntu-20.04
    needs: pypi
    steps:
      - uses: actions/checkout@v2
      - name: Get version
        run: |
          export VERSION=$(grep version setup.py | cut -f2 -d "'")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v1.12.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker and push to Dockerhub as version
        uses: docker/build-push-action@v2.8.0
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.VERSION }}
      - name: Build Docker and push to Dockerhub as latest
        uses: docker/build-push-action@v2.8.0
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
