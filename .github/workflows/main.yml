name: main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-20.04', 'macos-11', 'windows-2019']
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install package and testing extras
        run: pip install .[testing]
      - name: Test via pytest
        run: python -m pytest --cov=./${{ github.event.repository.name }}/ --cov-report xml
  package:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Make tarball
        run: python setup.py sdist
      - name: Make wheel
        run: python setup.py bdist_wheel
      - name: Create/activate conda env
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: ${{ github.event.repository.name }}
      - name: Install dependencies
        shell: bash -l {0}
        run: conda install --channel conda-forge --file requirements.txt
      - name: Export environment
        shell: bash -l {0}
        run: conda env export --name ${{ github.event.repository.name }} > dist/${{ github.event.repository.name }}.yml
      - name: Artifact dist/
        uses: actions/upload-artifact@v2
        with:
          name: artifactory
          path: dist/
